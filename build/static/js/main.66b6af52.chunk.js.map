{"version":3,"sources":["Components/Autocomplete.js","App.js","index.js"],"names":["Autocomplete","state","activeOption","filteredOptions","showOptions","userInput","title","ingredients","description","type","onChange","e","options","props","recipes","map","recipe","currentTarget","value","filter","option","toLowerCase","indexOf","setState","onClick","filteredOption","innerText","onKeyDown","keyCode","showSuggestions","length","submitInput","currentRecipe","optionList","this","className","optionName","index","key","Fragment","i","React","Component","App","useState","setRecipes","useEffect","axios","get","then","res","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66b6af52.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Autocomplete extends React.Component {\r\n  static propTypes = {\r\n    recipes: PropTypes.instanceOf(Object).isRequired\r\n  };\r\n\r\n  state = {\r\n    activeOption: 0,\r\n    filteredOptions: [],\r\n    showOptions: false,\r\n    userInput: \"\",\r\n    title: \"\",\r\n    ingredients: [],\r\n    description: \"\",\r\n    type: \"\"\r\n  };\r\n\r\n  onChange = (e) => {\r\n    const options = this.props.recipes.map(recipe => recipe.title);\r\n    const userInput = e.currentTarget.value;\r\n    const filteredOptions = options.filter(\r\n      (option) => option.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n    );\r\n    this.setState({\r\n      activeOption: 0,\r\n      filteredOptions,\r\n      showOptions: true,\r\n      userInput\r\n    });\r\n  };\r\n\r\n  onClick = (e) => {\r\n    this.setState({\r\n      activeOption: 0,\r\n      filteredOption: [],\r\n      showOptions: false,\r\n      userInput: e.currentTarget.innerText,\r\n      title: \"\",\r\n      ingredients: [],\r\n      description: \"\",\r\n      type: \"\"\r\n    });\r\n  };\r\n\r\n  onKeyDown = (e) => {\r\n    const { activeOption, filteredOptions } = this.state;\r\n    if (e.keyCode === 13) {\r\n      this.setState({\r\n        activeOption: 0,\r\n        showSuggestions: false,\r\n        showOptions: false,\r\n        userInput: filteredOptions[activeOption],\r\n        title: \"\",\r\n        ingredients: [],\r\n        description: \"\",\r\n        type: \"\"\r\n      });\r\n    } else if (e.keyCode === 38) {\r\n      if (activeOption === 0) {\r\n        return;\r\n      }\r\n      this.setState({ activeOption: activeOption - 1 });\r\n    } else if (e.keyCode === 40) {\r\n      if (activeOption - 1 === filteredOptions.length) {\r\n        return;\r\n      }\r\n      this.setState({ activeOption: activeOption + 1 });\r\n    }\r\n  };\r\n\r\n  submitInput = () => {\r\n    if (this.state.userInput !== \"\") {\r\n      const currentRecipe = this.props.recipes.filter(\r\n        (recipe) => recipe.title === this.state.userInput\r\n      );\r\n      if (currentRecipe.length === 1) {\r\n        this.setState({\r\n          userInput: \"\",\r\n          title: this.state.title + currentRecipe[0].title,\r\n          ingredients: [\r\n            ...this.state.ingredients,\r\n            ...currentRecipe[0].ingredients\r\n          ],\r\n          description: this.state.description + currentRecipe[0].description,\r\n          type: this.state.type + currentRecipe[0].type\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      submitInput,\r\n      state: {\r\n        activeOption,\r\n        filteredOptions,\r\n        showOptions,\r\n        userInput,\r\n        title,\r\n        ingredients,\r\n        description,\r\n        type\r\n      }\r\n    } = this;\r\n    let optionList;\r\n    if (showOptions && userInput) {\r\n      if (filteredOptions.length) {\r\n        optionList = (\r\n          <ul className=\"options\">\r\n            {filteredOptions.map((optionName, index) => {\r\n              let className;\r\n              if (index === activeOption) {\r\n                className = \"option-active\";\r\n              }\r\n              return (\r\n                <li className={className} key={optionName} onClick={onClick}>\r\n                  {optionName}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        );\r\n      } else {\r\n        optionList = (\r\n          <div className=\"no-options\">\r\n            <em>No Option!</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-box\"\r\n            onChange={onChange}\r\n            onKeyDown={onKeyDown}\r\n            value={userInput}\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"\"\r\n            onClick={submitInput}\r\n            className=\"search-btn\"\r\n          />\r\n        </div>\r\n        {optionList}\r\n        <div className=\"recipe\">\r\n          <h2>{title}</h2>\r\n          <em>{type}</em>\r\n          <ul>\r\n            {ingredients.map((i) => (\r\n              <li key={ingredients.indexOf(i)}>{i}</li>\r\n            ))}\r\n          </ul>\r\n          <p>{description}</p>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport Autocomplete from \"./Components/Autocomplete\";\n\nconst baseUrl = '/api/recipes'\n\nconst App = () => {\n  const [recipes, setRecipes] = useState([]);\n\n  const getRecipes = () => {\n    axios.get(baseUrl).then((res) => {\n      setRecipes(res.data);\n    });\n  };\n  useEffect(getRecipes, []);\n\n  return (\n    <div className=\"App\">\n      <Autocomplete recipes={recipes} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}